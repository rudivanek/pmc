-- SQL script to copy data from pmc_prefills to pmc_templates
-- Uses only columns that actually exist in the pmc_templates table

INSERT INTO public.pmc_templates (
    user_id,
    template_name,
    language,
    tone,
    word_count,
    custom_word_count,
    target_audience,
    key_message,
    desired_emotion,
    call_to_action,
    brand_values,
    keywords,
    context,
    brief_description,
    page_type,
    business_description,
    original_copy,
    template_type,
    competitor_urls,
    output_structure,
    product_service_name,
    industry_niche,
    tone_level,
    reader_funnel_stage,
    competitor_copy_text,
    target_audience_pain_points,
    preferred_writing_style,
    language_style_constraints,
    generatehumanized,
    generateheadlines,
    generatescores,
    selectedpersona,
    numberofheadlines,
    force_elaborations_examples,
    force_keyword_integration,
    prioritize_word_count,
    "adhereToLittleWordCount",
    "littleWordCountTolerancePercentage", 
    "wordCountTolerancePercentage",
    generate_seo_metadata,
    is_public,
    public_name,
    public_description,
    project_description,
    form_state_snapshot,
    category,
    created_at
)
SELECT
    p.user_id,
    p.label AS template_name,
    p.data->>'language' AS language,
    p.data->>'tone' AS tone,
    p.data->>'wordCount' AS word_count,
    (p.data->>'customWordCount')::integer AS custom_word_count,
    p.data->>'targetAudience' AS target_audience,
    p.data->>'keyMessage' AS key_message,
    p.data->>'desiredEmotion' AS desired_emotion,
    p.data->>'callToAction' AS call_to_action,
    p.data->>'brandValues' AS brand_values,
    p.data->>'keywords' AS keywords,
    p.data->>'context' AS context,
    p.data->>'briefDescription' AS brief_description,
    p.data->>'pageType' AS page_type,
    p.data->>'businessDescription' AS business_description,
    p.data->>'originalCopy' AS original_copy,
    p.data->>'tab' AS template_type,
    CASE
        WHEN jsonb_typeof(p.data->'competitorUrls') = 'array' THEN (SELECT array_agg(elem::text) FROM jsonb_array_elements_text(p.data->'competitorUrls') AS elem)
        ELSE NULL
    END AS competitor_urls,
    CASE
        WHEN jsonb_typeof(p.data->'outputStructure') = 'array' THEN (p.data->'outputStructure')::jsonb[]
        ELSE NULL
    END AS output_structure,
    p.data->>'productServiceName' AS product_service_name,
    p.data->>'industryNiche' AS industry_niche,
    (p.data->>'toneLevel')::integer AS tone_level,
    p.data->>'readerFunnelStage' AS reader_funnel_stage,
    p.data->>'competitorCopyText' AS competitor_copy_text,
    p.data->>'targetAudiencePainPoints' AS target_audience_pain_points,
    p.data->>'preferredWritingStyle' AS preferred_writing_style,
    CASE
        WHEN jsonb_typeof(p.data->'languageStyleConstraints') = 'array' THEN (SELECT array_agg(elem::text) FROM jsonb_array_elements_text(p.data->'languageStyleConstraints') AS elem)
        ELSE NULL
    END AS language_style_constraints,
    (p.data->>'generateHumanized')::boolean AS generatehumanized,
    (p.data->>'generateHeadlines')::boolean AS generateheadlines,
    (p.data->>'generateScores')::boolean AS generatescores,
    p.data->>'selectedPersona' AS selectedpersona,
    (p.data->>'numberOfHeadlines')::integer AS numberofheadlines,
    (p.data->>'forceElaborationsExamples')::boolean AS force_elaborations_examples,
    (p.data->>'forceKeywordIntegration')::boolean AS force_keyword_integration,
    (p.data->>'prioritizeWordCount')::boolean AS prioritize_word_count,
    (p.data->>'adhereToLittleWordCount')::boolean AS "adhereToLittleWordCount",
    (p.data->>'littleWordCountTolerancePercentage')::integer AS "littleWordCountTolerancePercentage",
    (p.data->>'wordCountTolerancePercentage')::numeric(4,1) AS "wordCountTolerancePercentage",
    (p.data->>'generateSeoMetadata')::boolean AS generate_seo_metadata,
    p.is_public,
    p.public_name,
    p.public_description,
    p.data->>'projectDescription' AS project_description,
    p.data AS form_state_snapshot,
    p.category,
    p.created_at
FROM
    public.pmc_prefills AS p
ON CONFLICT (user_id, template_name) DO NOTHING;
```